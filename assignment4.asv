%Question 3

clear
clc
% NumElec = 200;
nx = 20;
ny = 40;
% Vx = 0.8;
Vy = 0;
delx = 0.05e-7;
dely = 0.05e-7;
Acond = 1;
Bcond = 10E-2;
oldCurr = 0;

for Vx = 0.1:0.1:10
G = sparse(nx*ny,nx*ny);
Vv = zeros(nx*ny,1);
V = zeros(nx,ny);
B = zeros((nx*ny),1);

x = linspace(0,2e-7,40);
y = linspace(0,1e-7,20);
[X,Y] = meshgrid(x,y);


%Part 2 from assignment 2

cMap = zeros(nx, ny);

cMap = zeros(nx, ny);

for j = 1:ny
    for i = 1:nx
        cMap(i,j) = Acond;
        if ((j<((2/3)*ny))&&((j>((1/3)*ny))&&(i<((1/3)*nx))))|| ((j<((2/3)*ny))&&((j>((1/3)*ny))&&(i>((2/3)*nx))))
            cMap(i,j) = Bcond;
        end
    end
end
% figure(17)
% surf(X,Y,cMap)    
% title('Conduction Map')
% xlabel('ny Value')
% ylabel('nx Value')

%Initialize Left Boundary Conditions
for i = 1:nx*ny
    B(i,1) = 0;
    B(i,ny) = 0;
end
        
%Set diagonal
for j = 1:ny
    for i = 1:nx
        n = i+(j-1)*nx;
        %Set the Boundary Nodes
        if j == 1
            G(n,:) = 0;
            G(n,n) = 1; 
%             B(n,1) = 0;
            
        elseif j == ny
            G(n,:) = 0;
            G(n,n) = 1;
            B(n,1) = Vx;
            
        elseif i == 1
            %Mapping
            nxm = (i)+(j-2)*nx;
            nxp = (i)+(j)*nx;
            nyp = (i+1)+(j-1)*nx;
            G(n,:) = 0;
            G(n,n) = 1;
            B(n,1) = 0;
            
            rxm = ((cMap(i,j) + cMap(i,j-1))/2);
            rxp = ((cMap(i,j) + cMap(i,j+1))/2);            
            ryp = ((cMap(i,j) + cMap(i+1,j))/2);

            G(n,n) = -(rxp+rxm+ryp);
            G(n,nxm) = rxm;
            G(n,nyp) = ryp;
            G(n,nxp) = rxp;
            
        elseif i == nx
            %Mapping
            nym = (i-1)+(j-1)*nx;
            nxp = (i)+(j)*nx;
            nxm = (i)+(j-2)*nx;
            G(n,:) = 0;
            G(n,n) = 1;
            B(n,1) = 0;
            
            rxm = ((cMap(i,j) + cMap(i,j-1))/2);
            rxp = ((cMap(i,j) + cMap(i,j+1))/2);            
            rym = ((cMap(i,j) + cMap(i-1,j))/2);

            G(n,n) = -(rxm+rym+rxp);
            G(n,nym) = rym;
            G(n,nxm) = rxm;
            G(n,nxp) = rxp;            

        else
            %Mapping
            nym = (i-1)+(j-1)*nx;
            nyp = (i+1)+(j-1)*nx;
            nxm = (i)+(j-2)*nx;
            nxp = (i)+(j)*nx;

            rym = ((cMap(i,j) + cMap(i-1,j))/2);
            ryp = ((cMap(i,j) + cMap(i+1,j))/2);            
            rxm = ((cMap(i,j) + cMap(i,j-1))/2);        
            rxp = ((cMap(i,j) + cMap(i,j+1))/2);       
      
   
            G(n,n) = -(rxm+rxp+rym+ryp);
            G(n,nym) = rym;
            G(n,nyp) = ryp;
            G(n,nxm) = rxm;
            G(n,nxp) = rxp; 
            B(n,1) = 0;
            


        end
   
    end
end

Vv = G\B;

for j = 1:ny
    for i = 1:nx
        n = i+(j-1)*nx;
        V(i,j) = Vv(n,1);
    end
end

% figure(18)
% surf(X,Y,V)
% title('V Plot')
% xlabel('ny Value')
% ylabel('nx Value')



%Gradient of V
for j = 1:ny
    for i = 1:nx
        if j == 1
            Ex(i,j) = (V(i,j+1)-V(i,j));
        elseif j == ny
            Ex(i,j) = (V(i,j)-V(i,j-1));
        else
            Ex(i,j) = (V(i,j+1)-V(i,j-1))*0.5;
        end
        if i == 1
            Ey(i,j) = (V(i+1,j)-V(i,j));
        elseif i == nx
            Ey(i,j) = (V(i,j)-V(i-1,j));
        else
            Ey(i,j) = (V(i+1,j)-V(i-1,j))*0.5;
        end
    end
end

Ex = -Ex;
Ey = -Ey;
% figure(6)
% surf(X,Y,Ex)
% title('Ex Field')
% xlabel('ny Value')
% ylabel('nx Value')

% figure(7)
% surf(X,Y,Ey)
% title('Ey Field')
% xlabel('ny Value')
% ylabel('nx Value')

E = sqrt(Ex.^2+Ey.^2);
% figure(19)
% surf(X,Y,E)
% title('Total E Field')
% xlabel('ny Value')
% ylabel('nx Value')

eflowx = cMap.*-Ex;
eflowy = cMap.*-Ey;

% figure(9)
% surf(X,Y,eflowx)
% title('Eflow X')
% xlabel('ny Value')
% ylabel('nx Value')
% 
% figure(10)
% surf(X,Y,eflowy)
% title('Eflow Y')
% xlabel('ny Value')
% ylabel('nx Value')


eflow = sqrt(eflowx.^2 + eflowy.^2);

% figure(11)
% surf(X,Y,eflow)
% title('Eflow Total')
% xlabel('ny Value')
% ylabel('nx Value')

C0 = sum(eflowx(1,:));
Cnx = sum(eflowx(nx,:));
Curr = (C0+Cnx)*0.5;

% figure(20)
% quiver(X,Y,Ex,Ey)
% axis ([0 200e-9 0 100e-9])


figure(21)
hold on
plot([(Vx-0.1) Vx],[oldCurr Curr], 'k')
title('I-V Characteristics')
xlabel('Voltage (V)')
ylabel('Current (A)')
hold off
% figure(21)
% hold on
% plot([(m-1)*2 (m)*2],[oldCurr Curr], 'k')
% title('Average Current at Different Bottleneck Widths')
% xlabel('Bottleneck Portion of 10')
% ylabel('Current (A)')
% hold off

oldCurr = Curr;

% pause(0.1)
end

R3 = Vx/Curr;

% % 
% G1 = 1/1;
% c = 0.25;
% G2 = 1/2;
% L = 0.2;
% G3 = 1/R3;
% alpha = 100;
% G4 = 1/0.1;
% Go = 1/1000;
% f = linspace(0,1e2,1000);
% s = 2*pi*f;
% s1 = pi;
% V = linspace (-10,10,1000);
% V1old = 0;
% V3old = 0;
% V5old = 0;
% V3Cold = 0;
% V5Cold = 0;
% sold = 0;
% gainold = 0;
% V3CPold = 0;
% V5CPold = 0;
% gainCPold = 0;
% cpOld = 0;
% gainCPV = zeros(1000,1);
% histV5 = zeros(1000,1);
% histC = zeros(1000,1);
% cp = 0.05*randn(1000,1)+0.25;
% for i = 1:1000
%     cp = 0.05*randn(1000,1)+0.25;
%     V1 = V(i);
%     Vin = V1;
% F = [0 0 0 0 0 0 Vin 0];
% F1 = [0 0 0 0 0 0 1 0];
% 
% % X = [V1 V2 V3  V4 V5 IL I_Vin I_V4];
% 
% G = [G1 -G1 0 0 0 0 1 0;
%      -G1 G1+G2 0 0 0 1 0 0;
%      0 0 G3 0 0 -1 0 0;
%      0 0 0 G4 -G4 0 0 1;
%      0 0 0 -G4 G4+Go 0 0 0;
%      0 1 -1 0 0 -1 0 0;
%      1 0 0 0 0 0 0 0;
%      0 0 -alpha*G3 1 0 0 0 0;];
%  
% 
%  
%  C = [s(i)*c -s(i)*c 0 0 0 0 0 0;
%      -s(i)*c s(i)*c 0 0 0 0 0 0;
%      0 0 0 0 0 0 0 0;
%      0 0 0 0 0 0 0 0;
%      0 0 0 0 0 0 0 0;
%      0 0 0 0 0 -s(i)*L 0 0;
%      0 0 0 0 0 0 0 0;
%      0 0 0 0 0 0 0 0;];
% 
% 
% CP = [s1*cp(i) -s1*cp(i) 0 0 0 0 0 0;
%      -s1*cp(i) s1*cp(i) 0 0 0 0 0 0;
%      0 0 0 0 0 0 0 0;
%      0 0 0 0 0 0 0 0;
%      0 0 0 0 0 0 0 0;
%      0 0 0 0 0 -s1*L 0 0;
%      0 0 0 0 0 0 0 0;
%      0 0 0 0 0 0 0 0;];
% 
% 
% 
% 
% 
% 
% 
% 
%     Vin1 = 1;
%     Sols = G\F';
%     V3new = Sols(3);
%     V5new = Sols(5);
%     figure(1)
%     hold on
%     plot([V1old V1],[V3old V3new],'r', [V1old V1],[V5old V5new], 'b')
%     title('V3(R) and Vo(B)')
%     xlabel('Vin (V)')
%     ylabel('V Calculated (V)')
%     
%     V3old = V3new;
%     V5old = V5new;
%     V1old = V1;  
%     
%     
%     
%     
%     
%     CSols = (G+C)\F1';
%     V3Cnew = CSols(3);
%     V5Cnew = CSols(5);
%     gain = V5Cnew/Vin1;
%     
%     figure(2)
%     hold on
%     plot([sold s(i)], [V5Cold V5Cnew],'g',[sold s(i)],[gainold gain],'m')
%     title('Gain Graph')
%     xlabel('Frequency (Hz)')
%     ylabel('Gain (dB)')
% 
%     V3Cold = V3Cnew;
%     V5Cold = V5Cnew;
%     sold = s(i);
%     gainold = gain;
% 
%     
%     
% %     CPSols = (G+CP)\F1';
% %     V3CPnew = CPSols(3);
% %     V5CPnew = CPSols(5);
% %     gainCP = V5CPnew/Vin1;
%     
% %     figure(3)
% %     plot([cpOld cp(i)],[gainCPold gainCP],'m')
% %     hold on
%     
%   CPSols = (G+CP)\F1';
%     V3CPnew = CPSols(3);
%     V5CPnew = CPSols(5);
%     gainCP = V5CPnew/Vin1;
%     
%     figure(3)
%     plot([cpOld cp(i)],[gainCPold gainCP],'m')
%     hold on
%     
%     gainCPV(i) = gainCP;
%     
% 
%     
%     V3CPold = V3CPnew;
%     V5CPold = V5CPnew;
% %     sold = s(i);
%     gainCPold = gainCP;
%     cpOld = cp(i);
%     
%     histV5(i) = V5Cnew;
% %     histC(i) = cp;
% end
%     
% 
% figure(4)
% histogram(gainCPV)
% title('Gain Histogram')
% xlabel('Capacitance (F)')%Not sure if this is actually voltage
% ylabel('Gain (dB)')
% 
% % figure(5)
% % histogram(histV5)
% % 
% figure(6)
% histogram(cp)



























% % Question 4
% 
% Vin1 = 0;
% Vin2 = 0;
% Vin3 = 0;
% del = 1000;
% delt = 0.001;
% 
% G1 = 1/1;
% c = 0.25;
% G2 = 1/2;
% L = 0.2;
% G3 = 1/R3;
% alpha = 100;
% G4 = 1/0.1;
% Go = 1/1000;
% VinOld = 0;
% V3old = 0;
% V5old = 0;
% V3Cold = 0;
% V5Cold = 0;
% told = 0;
% gainold = 0;
% histV5 = zeros(1000,1);
% histC = zeros(1000,1);
% Sols = [0; 0; 0; 0; 0; 0; 0; 0;];
% timeV = linspace(0,1,1000);
% 
% pii = timeV>0.03 & timeV<1;
% pp = zeros(size(timeV));
% pp(pii) = 1;
% 
% f = (1/0.03);
% sV = sin(2*pi*f.*timeV);
% 
% gpV = exp(-(timeV-0.126).^2/(2*0.03^2));
% % plot(timeV, gp)
% 
%         
%         
% i = 0; 
% for time = 0:0.001:1
% i = i+1;
% %     Set Input Signals
% %     if(time >= 0.03)
% %         Vin1 = 1;           
% %         Vin1 = sin(2*pi*f*time);
% %     end
%     
%     gp = exp(-(time-0.136).^2/(2*0.03^2));
%     Vin1 = gp;
%     
%     
%  
% 
%     % X = [V1 V2 V3  V4 V5 IL I_Vin I_V4];
% 
%     G = [G1 -G1 0 0 0 0 1 0;
%          -G1 G1+G2 0 0 0 1 0 0;
%          0 0 G3 0 0 -1 0 0;
%          0 0 0 G4 -G4 0 0 1;
%          0 0 0 -G4 G4+Go 0 0 0;
%          0 1 -1 0 0 -1 0 0;
%          1 0 0 0 0 0 0 0;
%          0 0 -alpha*G3 1 0 0 0 0;];
% 
% 
% 
%      C = [(1/(delt))*c -(1/(delt))*c 0 0 0 0 0 0;
%          -(1/(delt))*c (1/(delt))*c 0 0 0 0 0 0;
%          0 0 0 0 0 0 0 0;
%          0 0 0 0 0 0 0 0;
%          0 0 0 0 0 0 0 0;
%          0 0 0 0 0 -(1/(delt))*L 0 0;
%          0 0 0 0 0 0 0 0;
%          0 0 0 0 0 0 0 0;];
% 
% 
% 
%    
%     
%     Vin = Vin1;
%     F = [0; 0; 0; 0; 0; 0; Vin; 0;];
%     Fu = C*(Sols);
%     delF = Fu+F;
% 
% 
% 
% %     Vin1 = 1;
% %     V5old = Sols(5);
% %     V3old = Sols(3);
%     
%     Sols = (G+C)\delF;
%     V3new = Sols(3);
%     V5new = Sols(5);
%     figure(5)
%     hold on
%     plot([told time],[VinOld Vin1],'r', [told time],[V5old V5new], 'g')
%     title('Vin(R) and Vo(G)')
%     xlabel('Time (s)')
%     ylabel('V Calculated (V)')
%     
% %     V3old = V3new;
%     V5old = V5new;
%     VinOld = Vin1;  
%     told = time;
%     
%    
%     
%   
% time
% 
% 
% end
% 
% % %Responses for step input
% % freqResp = fft(pp);
% % freqRespS = fftshift(freqResp);
% % 
% % figure(6)
% % hold on
% % plot(timeV, pp)
% % title('Input Signal')
% % 
% % figure(7)
% % hold on
% % plot(log10(abs(fftshift(freqResp))))
% % title('Plot of Frequency Response')
% 
% 
% 
% 
% % 
% % %Responses for sinusoidal input
% % freqResp = fft(sV);
% % freqRespS = fftshift(freqResp);
% % 
% % figure(6)
% % hold on
% % plot(timeV, sV)
% % title('Input Signal')
% % 
% % figure(7)
% % hold on
% % plot(log10(abs(fftshift(freqResp))))
% % title('Plot of Frequency Response')
% 
% 
% 
% %Responses for gaussian input
% freqResp = fft(gpV);
% freqRespS = fftshift(freqResp);
% 
% figure(6)
% hold on
% plot(timeV, gpV)
% title('Input Signal')
% 
% figure(7)
% hold on
% plot(log10(abs(fftshift(freqResp))))
% title('Plot of Frequency Response')


















% Question 5

Vin1 = 0;
Vin2 = 0;
Vin3 = 0;
del = 1000;
delt = 0.001;

G1 = 1/1;
c = 0.25;
cn = 0.0002;
In = rand(1001,1)*0.001;
G2 = 1/2;
L = 0.2;
G3 = 1/R3;
alpha = 100;
G4 = 1/0.1;
Go = 1/1000;
VinOld = 0;
V3old = 0;
V5old = 0;
V3Cold = 0;
V5Cold = 0;
told = 0;
gainold = 0;
histV5 = zeros(1000,1);
histC = zeros(1000,1);
Sols = [0; 0; 0; 0; 0; 0; 0; 0; 0;];
timeV = linspace(0,1,1000);
V5newV = zeros(1001,1);

pii = timeV>0.03 & timeV<1;
pp = zeros(size(timeV));
pp(pii) = 1;

f = (1/0.03);
sV = sin(2*pi*f.*timeV);

gpV = exp(-(timeV-0.126).^2/(2*0.03^2));
% plot(timeV, gp)

        
        
i = 0; 
for time = 0:0.001:1
i = i+1;
%     Set Input Signals
    if(time >= 0.03)
        Vin1 = 1;           
%         Vin1 = sin(2*pi*f*time);
    end
    
%     gp = exp(-(time-0.136).^2/(2*0.03^2));
%     Vin1 = gp;
%     
    
 

    % X = [V1 V2 V3  V4 V5 IL I_Vin I_V4 In];

    G = [G1 -G1 0 0 0 0 1 0 0;
         -G1 G1+G2 0 0 0 1 0 0 0;
         0 0 G3 0 0 -1 0 0 1;
         0 0 0 G4 -G4 0 0 1 0;
         0 0 0 -G4 G4+Go 0 0 0 0;
         0 1 -1 0 0 -1 0 0 0;
         1 0 0 0 0 0 0 0 0;
         0 0 -alpha*G3 1 0 0 0 0 0;
         0 0 0 0 0 0 0 0 1];



     C = [(1/(delt))*c -(1/(delt))*c 0 0 0 0 0 0 0;
         -(1/(delt))*c (1/(delt))*c 0 0 0 0 0 0 0;
         0 0 -(1/(delt))*cn 0 0 0 0 0 0;
         0 0 0 0 0 0 0 0 0;
         0 0 0 0 0 0 0 0 0;
         0 0 0 0 0 -(1/(delt))*L 0 0 0;
         0 0 0 0 0 0 0 0 0;
         0 0 0 0 0 0 0 0 0;
         0 0 0 0 0 0 0 0 0];



   
    
    Vin = Vin1;
    F = [0; 0; 0; 0; 0; 0; Vin; 0; In(i);];
    Fu = C*(Sols);
    delF = Fu+F;



%     Vin1 = 1;
%     V5old = Sols(5);
%     V3old = Sols(3);
    
    Sols = (G+C)\delF;
    V3new = Sols(3);
    V5new = Sols(5);
    V5newV(i) = V5new; 
    figure(5)
    hold on
    plot([told time],[VinOld Vin1],'r', [told time],[V5old V5new], 'g')
    title('Vin(R) and Vo(G)')
    xlabel('Time (s)')
    ylabel('V Calculated (V)')
    
%     V3old = V3new;
    V5old = V5new;
    VinOld = Vin1;  
    told = time;
    
   
    
  
time


end

%Responses for step input
freqResp = fft(pp);
freqRespS = fftshift(freqResp);

figure(6)
hold on
plot(timeV, pp)
title('Input Signal')

figure(7)
hold on
plot(log10(abs(fftshift(freqResp))))
title('Plot of Frequency Response')





% %Responses for sinusoidal input
% freqResp = fft(sV);
% freqRespS = fftshift(freqResp);
% 
% figure(6)
% hold on
% plot(timeV, sV)
% title('Input Signal')
% 
% figure(7)
% hold on
% plot(log10(abs(fftshift(freqResp))))
% title('Plot of Frequency Response')



%Responses for gaussian input
freqResp = fft(gpV);
freqRespS = fftshift(freqResp);

freqRespVo = fft(V5newV);
freqRespSVo = fftshift(freqRespVo);

figure(6)
hold on
plot(timeV, gpV)
title('Input Signal')

figure(7)
hold on
plot(abs(fftshift(freqResp)))
title('Plot of Frequency Response')


figure(8)
hold on
plot(log10(abs(fftshift(freqRespVo)))
title('Plot of Frequency Response')



